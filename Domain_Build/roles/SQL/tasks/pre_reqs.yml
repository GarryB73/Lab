---
#
# Install SQL Developer Edition
#

# Load required powershell modules
- name: Powershell | Check for SQLServer DSC Powershell module
  win_psmodule:
    name: SQLServerDsc
    state: present

- name: Powershell | Check for Storage DSC Powershell module
  win_psmodule:
    name: StorageDsc
    state: present

- name: Powershell | Check for ServerManager Powershell module
  win_psmodule:
    name: ServerManager
    state: present

- name: Powershell | Ensure that DBA Tools module is present
  win_psmodule:
    name: dbatools
    state: present

- name: Powershell | Check for xNetworking Powershell module
  win_psmodule:
    name: xNetworking
    state: present

- name: Windows | Install .NET Framework Core
  win_feature:
    name: NET-Framework-Core
    state: present

# Setup SQL Server Pre-Reqs
- name: Windows | Install .NET Framework 3.5
  win_feature:
    name: NET-Framework-Features
    state: present

- name: Windows | Install .NET Framework 4.5 Features
  win_feature:
    name: NET-Framework-45-Features
    state: present
    include_sub_features: True

- name: Windows | Install Windows Process Activation Service
  win_feature:
    name: WAS
    state: present
    include_sub_features: True

# Setup service accounts
#
# We delegate this process to our domain controller since the required AD services are there for
# win_domain_user to interact with. 
#- name: Active Directory | Ensure SQL Service account is present
#  win_domain_user:
#    name: "{{ mssql_sqlsvc_account | regex_search('[^\\\\]*$') }}"
#    firstname: "{{ mssql_instance_name }}"
#    surname: SQLSvc
#    password: "{{ mssql_sqlsvc_account_pass }}"
#    password_never_expires: yes
#    user_cannot_change_password: yes
#    description: "SQL Service account for {{ inventory_hostname }}\\{{ mssql_instance_name }}"
#    state: present
#    path: "{{ mssql_base_ldap_path }}"
#    groups:
#      - Domain Users
#  tags: service_account
#  delegate_to: "{{ domain_controller }}"

#- name: Active Directory | Ensure SQL Agent Service account is present
#  win_domain_user:
#    name: "{{ mssql_agentsvc_account | regex_search('[^\\\\]*$') }}"
#    firstname: "{{ mssql_instance_name }}"
#    surname: AgentSvc
#    password: "{{ mssql_agentsvc_account_pass }}"
#    password_never_expires: yes
#    user_cannot_change_password: yes
#    description: "SQL Agent service account for {{ inventory_hostname }}\\{{ mssql_instance_name }}"
#    state: present
#    path: "{{ mssql_base_ldap_path }}"
#    groups:
#      - Domain Users
#  delegate_to: "{{ domain_controller }}"
#  tags: service_account

# SQL install may fail if a pending reboot is detected
# Assuming we are allowed to reboot this step will check for pending reboots
# and execute a reboot, reboot activity can be controlled using the variable mssql_suppress_reboot

- name: Ensure that a reboot is not pending
  when: ansible_reboot_pending
  debug:
    msg: 'Pending reboot detected'
  changed_when: true
  notify: reboot windows

- meta: flush_handlers

- name: Fetch SQL Media Downloader
  win_get_url:
    url: "{{ mssql_installation_source }}"
    dest: "{{ mssql_temp_download_path }}\\SQLServer2017-SSEI-Dev.exe"

- name: Use Media Downloader to fetch SQL Installation CABs to {{ mssql_installation_path }}
  win_shell: "{{ mssql_temp_download_path }}\\SQLServer2017-SSEI-Dev.exe /Action=Download /MediaPath={{ mssql_installation_path }} /MediaType=CAB /Quiet"

# Job will fail if extracted media folder is not empty, quick step to ensure it's empty
- name: Ensure installation media extraction path is empty
  win_file:
    path: "{{ mssql_installation_path }}\\Media"
    state: absent

- name: Extract installation media
  win_shell: "{{ mssql_installation_path }}\\SQLServer2017-DEV-x64-ENU.exe /X:{{ mssql_installation_path }}\\Media /Q"
# If this step fails, logs are in C:\Program Files\Microsoft SQL Server\...\Setup Bootstrap\Log
# it will often contain the actual error.  If it shows everything passing, the issue is within the DSC logs.